/*
 * Created on 28 ¡.¾. 2558 ( Time 11:56:44 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.nichesoft.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "user"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="user", catalog="papm" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="UserEntity.countAll", query="SELECT COUNT(x) FROM UserEntity x" )
} )
public class UserEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="user_id", nullable=false)
    private Integer    userId       ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="user_name", nullable=false, length=40)
    private String     userName     ;

    @Column(name="password", nullable=false, length=40)
    private String     password     ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_at", nullable=false)
    private Date       createdAt    ;

    @Column(name="created_by", nullable=false)
    private Integer    createdBy    ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updated_at")
    private Date       updatedAt    ;

    @Column(name="updated_by")
    private Integer    updatedBy    ;

    @Column(name="active", nullable=false)
    private Boolean    active       ;

	// "employeeId" (column "employee_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="employee_id", referencedColumnName="employee_id")
    private EmployeeEntity employee    ;

    @OneToMany(mappedBy="user", targetEntity=UserPermissionEntity.class)
    private List<UserPermissionEntity> listOfUserPermission;

    @OneToMany(mappedBy="user", targetEntity=ProjectUserEntity.class)
    private List<ProjectUserEntity> listOfProjectUser;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public UserEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setUserId( Integer userId ) {
        this.userId = userId ;
    }
    public Integer getUserId() {
        return this.userId;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : user_name ( VARCHAR ) 
    public void setUserName( String userName ) {
        this.userName = userName;
    }
    public String getUserName() {
        return this.userName;
    }

    //--- DATABASE MAPPING : password ( VARCHAR ) 
    public void setPassword( String password ) {
        this.password = password;
    }
    public String getPassword() {
        return this.password;
    }

    //--- DATABASE MAPPING : created_at ( DATETIME ) 
    public void setCreatedAt( Date createdAt ) {
        this.createdAt = createdAt;
    }
    public Date getCreatedAt() {
        return this.createdAt;
    }

    //--- DATABASE MAPPING : created_by ( INT ) 
    public void setCreatedBy( Integer createdBy ) {
        this.createdBy = createdBy;
    }
    public Integer getCreatedBy() {
        return this.createdBy;
    }

    //--- DATABASE MAPPING : updated_at ( DATETIME ) 
    public void setUpdatedAt( Date updatedAt ) {
        this.updatedAt = updatedAt;
    }
    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    //--- DATABASE MAPPING : updated_by ( INT ) 
    public void setUpdatedBy( Integer updatedBy ) {
        this.updatedBy = updatedBy;
    }
    public Integer getUpdatedBy() {
        return this.updatedBy;
    }

    //--- DATABASE MAPPING : active ( BIT ) 
    public void setActive( Boolean active ) {
        this.active = active;
    }
    public Boolean getActive() {
        return this.active;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setEmployee( EmployeeEntity employee ) {
        this.employee = employee;
    }
    public EmployeeEntity getEmployee() {
        return this.employee;
    }

    public void setListOfUserPermission( List<UserPermissionEntity> listOfUserPermission ) {
        this.listOfUserPermission = listOfUserPermission;
    }
    public List<UserPermissionEntity> getListOfUserPermission() {
        return this.listOfUserPermission;
    }

    public void setListOfProjectUser( List<ProjectUserEntity> listOfProjectUser ) {
        this.listOfProjectUser = listOfProjectUser;
    }
    public List<ProjectUserEntity> getListOfProjectUser() {
        return this.listOfProjectUser;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(userId);
        sb.append("]:"); 
        sb.append(userName);
        sb.append("|");
        sb.append(password);
        sb.append("|");
        sb.append(createdAt);
        sb.append("|");
        sb.append(createdBy);
        sb.append("|");
        sb.append(updatedAt);
        sb.append("|");
        sb.append(updatedBy);
        sb.append("|");
        sb.append(active);
        return sb.toString(); 
    } 

}
