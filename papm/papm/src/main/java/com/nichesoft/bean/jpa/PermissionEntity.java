/*
 * Created on 27 ¡.¾. 2558 ( Time 16:44:11 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.nichesoft.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "permission"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="permission", catalog="papm" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="PermissionEntity.countAll", query="SELECT COUNT(x) FROM PermissionEntity x" )
} )
public class PermissionEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="permission_id", nullable=false)
    private Integer    permissionId ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="permission_name", nullable=false, length=40)
    private String     permissionName ;

    @Column(name="can_view", nullable=false)
    private Boolean    canView      ;

    @Column(name="can_edit", nullable=false)
    private Boolean    canEdit      ;

    @Column(name="can_insert", nullable=false)
    private Boolean    canInsert    ;

    @Column(name="can_delete", nullable=false)
    private Boolean    canDelete    ;

	// "menuId" (column "menu_id") is not defined by itself because used as FK in a link 


    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @ManyToOne
    @JoinColumn(name="menu_id", referencedColumnName="menu_sub_is")
    private MenuSubEntity menuSub     ;

    @OneToMany(mappedBy="permission", targetEntity=UserPermissionEntity.class)
    private List<UserPermissionEntity> listOfUserPermission;

    @OneToMany(mappedBy="permission", targetEntity=RolePermissionEntity.class)
    private List<RolePermissionEntity> listOfRolePermission;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public PermissionEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setPermissionId( Integer permissionId ) {
        this.permissionId = permissionId ;
    }
    public Integer getPermissionId() {
        return this.permissionId;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : permission_name ( VARCHAR ) 
    public void setPermissionName( String permissionName ) {
        this.permissionName = permissionName;
    }
    public String getPermissionName() {
        return this.permissionName;
    }

    //--- DATABASE MAPPING : can_view ( BIT ) 
    public void setCanView( Boolean canView ) {
        this.canView = canView;
    }
    public Boolean getCanView() {
        return this.canView;
    }

    //--- DATABASE MAPPING : can_edit ( BIT ) 
    public void setCanEdit( Boolean canEdit ) {
        this.canEdit = canEdit;
    }
    public Boolean getCanEdit() {
        return this.canEdit;
    }

    //--- DATABASE MAPPING : can_insert ( BIT ) 
    public void setCanInsert( Boolean canInsert ) {
        this.canInsert = canInsert;
    }
    public Boolean getCanInsert() {
        return this.canInsert;
    }

    //--- DATABASE MAPPING : can_delete ( BIT ) 
    public void setCanDelete( Boolean canDelete ) {
        this.canDelete = canDelete;
    }
    public Boolean getCanDelete() {
        return this.canDelete;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setMenuSub( MenuSubEntity menuSub ) {
        this.menuSub = menuSub;
    }
    public MenuSubEntity getMenuSub() {
        return this.menuSub;
    }

    public void setListOfUserPermission( List<UserPermissionEntity> listOfUserPermission ) {
        this.listOfUserPermission = listOfUserPermission;
    }
    public List<UserPermissionEntity> getListOfUserPermission() {
        return this.listOfUserPermission;
    }

    public void setListOfRolePermission( List<RolePermissionEntity> listOfRolePermission ) {
        this.listOfRolePermission = listOfRolePermission;
    }
    public List<RolePermissionEntity> getListOfRolePermission() {
        return this.listOfRolePermission;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(permissionId);
        sb.append("]:"); 
        sb.append(permissionName);
        sb.append("|");
        sb.append(canView);
        sb.append("|");
        sb.append(canEdit);
        sb.append("|");
        sb.append(canInsert);
        sb.append("|");
        sb.append(canDelete);
        return sb.toString(); 
    } 

}
