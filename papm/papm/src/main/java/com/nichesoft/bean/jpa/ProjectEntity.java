/*
 * Created on 27 ¡.¾. 2558 ( Time 16:44:11 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
// This Bean has a basic Primary Key (not composite) 

package com.nichesoft.bean.jpa;

import java.io.Serializable;

//import javax.validation.constraints.* ;
//import org.hibernate.validator.constraints.* ;

import java.util.Date;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for entity stored in table "project"
 *
 * @author Telosys Tools Generator
 *
 */

@Entity
@Table(name="project", catalog="papm" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="ProjectEntity.countAll", query="SELECT COUNT(x) FROM ProjectEntity x" )
} )
public class ProjectEntity implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="project_id", nullable=false)
    private Integer    projectId    ;


    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="project_name", length=256)
    private String     projectName  ;

    @Column(name="project_code", length=40)
    private String     projectCode  ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="created_at")
    private Date       createdAt    ;

    @Column(name="created_by")
    private Integer    createdBy    ;

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="updated_at")
    private Date       updatedAt    ;

    @Column(name="updated_by")
    private Integer    updatedBy    ;



    //----------------------------------------------------------------------
    // ENTITY LINKS ( RELATIONSHIP )
    //----------------------------------------------------------------------
    @OneToMany(mappedBy="project", targetEntity=ProjectUserEntity.class)
    private List<ProjectUserEntity> listOfProjectUser;


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public ProjectEntity() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setProjectId( Integer projectId ) {
        this.projectId = projectId ;
    }
    public Integer getProjectId() {
        return this.projectId;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : project_name ( VARCHAR ) 
    public void setProjectName( String projectName ) {
        this.projectName = projectName;
    }
    public String getProjectName() {
        return this.projectName;
    }

    //--- DATABASE MAPPING : project_code ( VARCHAR ) 
    public void setProjectCode( String projectCode ) {
        this.projectCode = projectCode;
    }
    public String getProjectCode() {
        return this.projectCode;
    }

    //--- DATABASE MAPPING : created_at ( DATETIME ) 
    public void setCreatedAt( Date createdAt ) {
        this.createdAt = createdAt;
    }
    public Date getCreatedAt() {
        return this.createdAt;
    }

    //--- DATABASE MAPPING : created_by ( INT ) 
    public void setCreatedBy( Integer createdBy ) {
        this.createdBy = createdBy;
    }
    public Integer getCreatedBy() {
        return this.createdBy;
    }

    //--- DATABASE MAPPING : updated_at ( DATETIME ) 
    public void setUpdatedAt( Date updatedAt ) {
        this.updatedAt = updatedAt;
    }
    public Date getUpdatedAt() {
        return this.updatedAt;
    }

    //--- DATABASE MAPPING : updated_by ( INT ) 
    public void setUpdatedBy( Integer updatedBy ) {
        this.updatedBy = updatedBy;
    }
    public Integer getUpdatedBy() {
        return this.updatedBy;
    }


    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR LINKS
    //----------------------------------------------------------------------
    public void setListOfProjectUser( List<ProjectUserEntity> listOfProjectUser ) {
        this.listOfProjectUser = listOfProjectUser;
    }
    public List<ProjectUserEntity> getListOfProjectUser() {
        return this.listOfProjectUser;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(projectId);
        sb.append("]:"); 
        sb.append(projectName);
        sb.append("|");
        sb.append(projectCode);
        sb.append("|");
        sb.append(createdAt);
        sb.append("|");
        sb.append(createdBy);
        sb.append("|");
        sb.append(updatedAt);
        sb.append("|");
        sb.append(updatedBy);
        return sb.toString(); 
    } 

}
