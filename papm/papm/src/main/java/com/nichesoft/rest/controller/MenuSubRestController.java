/*
 * Created on 27 ¡.¾. 2558 ( Time 16:44:32 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.nichesoft.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.nichesoft.bean.MenuSub;
import com.nichesoft.business.service.MenuSubService;
import com.nichesoft.web.listitem.MenuSubListItem;

/**
 * Spring MVC controller for 'MenuSub' management.
 */
@Controller
public class MenuSubRestController {

	@Resource
	private MenuSubService menuSubService;
	
	@RequestMapping( value="/items/menuSub",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<MenuSubListItem> findAllAsListItems() {
		List<MenuSub> list = menuSubService.findAll();
		List<MenuSubListItem> items = new LinkedList<MenuSubListItem>();
		for ( MenuSub menuSub : list ) {
			items.add(new MenuSubListItem( menuSub ) );
		}
		return items;
	}
	
	@RequestMapping( value="/menuSub",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<MenuSub> findAll() {
		return menuSubService.findAll();
	}

	@RequestMapping( value="/menuSub/{menuSubIs}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public MenuSub findOne(@PathVariable("menuSubIs") Integer menuSubIs) {
		return menuSubService.findById(menuSubIs);
	}
	
	@RequestMapping( value="/menuSub",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public MenuSub create(@RequestBody MenuSub menuSub) {
		return menuSubService.create(menuSub);
	}

	@RequestMapping( value="/menuSub/{menuSubIs}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public MenuSub update(@PathVariable("menuSubIs") Integer menuSubIs, @RequestBody MenuSub menuSub) {
		return menuSubService.update(menuSub);
	}

	@RequestMapping( value="/menuSub/{menuSubIs}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("menuSubIs") Integer menuSubIs) {
		menuSubService.delete(menuSubIs);
	}
	
}
