/*
 * Created on 27 ¡.¾. 2558 ( Time 16:44:33 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.nichesoft.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.nichesoft.bean.Permission;
import com.nichesoft.business.service.PermissionService;
import com.nichesoft.web.listitem.PermissionListItem;

/**
 * Spring MVC controller for 'Permission' management.
 */
@Controller
public class PermissionRestController {

	@Resource
	private PermissionService permissionService;
	
	@RequestMapping( value="/items/permission",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<PermissionListItem> findAllAsListItems() {
		List<Permission> list = permissionService.findAll();
		List<PermissionListItem> items = new LinkedList<PermissionListItem>();
		for ( Permission permission : list ) {
			items.add(new PermissionListItem( permission ) );
		}
		return items;
	}
	
	@RequestMapping( value="/permission",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Permission> findAll() {
		return permissionService.findAll();
	}

	@RequestMapping( value="/permission/{permissionId}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Permission findOne(@PathVariable("permissionId") Integer permissionId) {
		return permissionService.findById(permissionId);
	}
	
	@RequestMapping( value="/permission",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Permission create(@RequestBody Permission permission) {
		return permissionService.create(permission);
	}

	@RequestMapping( value="/permission/{permissionId}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Permission update(@PathVariable("permissionId") Integer permissionId, @RequestBody Permission permission) {
		return permissionService.update(permission);
	}

	@RequestMapping( value="/permission/{permissionId}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("permissionId") Integer permissionId) {
		permissionService.delete(permissionId);
	}
	
}
