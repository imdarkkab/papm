/*
 * Created on 27 ¡.¾. 2558 ( Time 16:44:33 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.nichesoft.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.nichesoft.bean.Project;
import com.nichesoft.business.service.ProjectService;
import com.nichesoft.web.listitem.ProjectListItem;

/**
 * Spring MVC controller for 'Project' management.
 */
@Controller
public class ProjectRestController {

	@Resource
	private ProjectService projectService;
	
	@RequestMapping( value="/items/project",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<ProjectListItem> findAllAsListItems() {
		List<Project> list = projectService.findAll();
		List<ProjectListItem> items = new LinkedList<ProjectListItem>();
		for ( Project project : list ) {
			items.add(new ProjectListItem( project ) );
		}
		return items;
	}
	
	@RequestMapping( value="/project",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Project> findAll() {
		return projectService.findAll();
	}

	@RequestMapping( value="/project/{projectId}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Project findOne(@PathVariable("projectId") Integer projectId) {
		return projectService.findById(projectId);
	}
	
	@RequestMapping( value="/project",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Project create(@RequestBody Project project) {
		return projectService.create(project);
	}

	@RequestMapping( value="/project/{projectId}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Project update(@PathVariable("projectId") Integer projectId, @RequestBody Project project) {
		return projectService.update(project);
	}

	@RequestMapping( value="/project/{projectId}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("projectId") Integer projectId) {
		projectService.delete(projectId);
	}
	
}
