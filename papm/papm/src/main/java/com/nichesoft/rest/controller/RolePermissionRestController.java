/*
 * Created on 27 ¡.¾. 2558 ( Time 16:44:33 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.nichesoft.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.nichesoft.bean.RolePermission;
import com.nichesoft.business.service.RolePermissionService;
import com.nichesoft.web.listitem.RolePermissionListItem;

/**
 * Spring MVC controller for 'RolePermission' management.
 */
@Controller
public class RolePermissionRestController {

	@Resource
	private RolePermissionService rolePermissionService;
	
	@RequestMapping( value="/items/rolePermission",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<RolePermissionListItem> findAllAsListItems() {
		List<RolePermission> list = rolePermissionService.findAll();
		List<RolePermissionListItem> items = new LinkedList<RolePermissionListItem>();
		for ( RolePermission rolePermission : list ) {
			items.add(new RolePermissionListItem( rolePermission ) );
		}
		return items;
	}
	
	@RequestMapping( value="/rolePermission",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<RolePermission> findAll() {
		return rolePermissionService.findAll();
	}

	@RequestMapping( value="/rolePermission/{rolePermissionId}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public RolePermission findOne(@PathVariable("rolePermissionId") Integer rolePermissionId) {
		return rolePermissionService.findById(rolePermissionId);
	}
	
	@RequestMapping( value="/rolePermission",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public RolePermission create(@RequestBody RolePermission rolePermission) {
		return rolePermissionService.create(rolePermission);
	}

	@RequestMapping( value="/rolePermission/{rolePermissionId}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public RolePermission update(@PathVariable("rolePermissionId") Integer rolePermissionId, @RequestBody RolePermission rolePermission) {
		return rolePermissionService.update(rolePermission);
	}

	@RequestMapping( value="/rolePermission/{rolePermissionId}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("rolePermissionId") Integer rolePermissionId) {
		rolePermissionService.delete(rolePermissionId);
	}
	
}
