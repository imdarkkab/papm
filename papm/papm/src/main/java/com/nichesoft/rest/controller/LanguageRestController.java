/*
 * Created on 27 ¡.¾. 2558 ( Time 16:44:32 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.nichesoft.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.nichesoft.bean.Language;
import com.nichesoft.business.service.LanguageService;
import com.nichesoft.web.listitem.LanguageListItem;

/**
 * Spring MVC controller for 'Language' management.
 */
@Controller
public class LanguageRestController {

	@Resource
	private LanguageService languageService;
	
	@RequestMapping( value="/items/language",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<LanguageListItem> findAllAsListItems() {
		List<Language> list = languageService.findAll();
		List<LanguageListItem> items = new LinkedList<LanguageListItem>();
		for ( Language language : list ) {
			items.add(new LanguageListItem( language ) );
		}
		return items;
	}
	
	@RequestMapping( value="/language",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Language> findAll() {
		return languageService.findAll();
	}

	@RequestMapping( value="/language/{languageId}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Language findOne(@PathVariable("languageId") Integer languageId) {
		return languageService.findById(languageId);
	}
	
	@RequestMapping( value="/language",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Language create(@RequestBody Language language) {
		return languageService.create(language);
	}

	@RequestMapping( value="/language/{languageId}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Language update(@PathVariable("languageId") Integer languageId, @RequestBody Language language) {
		return languageService.update(language);
	}

	@RequestMapping( value="/language/{languageId}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("languageId") Integer languageId) {
		languageService.delete(languageId);
	}
	
}
