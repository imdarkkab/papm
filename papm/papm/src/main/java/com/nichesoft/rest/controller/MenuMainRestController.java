/*
 * Created on 27 ¡.¾. 2558 ( Time 16:44:32 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.nichesoft.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.nichesoft.bean.MenuMain;
import com.nichesoft.business.service.MenuMainService;
import com.nichesoft.web.listitem.MenuMainListItem;

/**
 * Spring MVC controller for 'MenuMain' management.
 */
@Controller
public class MenuMainRestController {

	@Resource
	private MenuMainService menuMainService;
	
	@RequestMapping( value="/items/menuMain",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<MenuMainListItem> findAllAsListItems() {
		List<MenuMain> list = menuMainService.findAll();
		List<MenuMainListItem> items = new LinkedList<MenuMainListItem>();
		for ( MenuMain menuMain : list ) {
			items.add(new MenuMainListItem( menuMain ) );
		}
		return items;
	}
	
	@RequestMapping( value="/menuMain",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<MenuMain> findAll() {
		return menuMainService.findAll();
	}

	@RequestMapping( value="/menuMain/{menuMainId}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public MenuMain findOne(@PathVariable("menuMainId") Integer menuMainId) {
		return menuMainService.findById(menuMainId);
	}
	
	@RequestMapping( value="/menuMain",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public MenuMain create(@RequestBody MenuMain menuMain) {
		return menuMainService.create(menuMain);
	}

	@RequestMapping( value="/menuMain/{menuMainId}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public MenuMain update(@PathVariable("menuMainId") Integer menuMainId, @RequestBody MenuMain menuMain) {
		return menuMainService.update(menuMain);
	}

	@RequestMapping( value="/menuMain/{menuMainId}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("menuMainId") Integer menuMainId) {
		menuMainService.delete(menuMainId);
	}
	
}
