/*
 * Created on 27 ¡.¾. 2558 ( Time 16:44:34 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.nichesoft.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.nichesoft.bean.UserPermission;
import com.nichesoft.business.service.UserPermissionService;
import com.nichesoft.web.listitem.UserPermissionListItem;

/**
 * Spring MVC controller for 'UserPermission' management.
 */
@Controller
public class UserPermissionRestController {

	@Resource
	private UserPermissionService userPermissionService;
	
	@RequestMapping( value="/items/userPermission",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<UserPermissionListItem> findAllAsListItems() {
		List<UserPermission> list = userPermissionService.findAll();
		List<UserPermissionListItem> items = new LinkedList<UserPermissionListItem>();
		for ( UserPermission userPermission : list ) {
			items.add(new UserPermissionListItem( userPermission ) );
		}
		return items;
	}
	
	@RequestMapping( value="/userPermission",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<UserPermission> findAll() {
		return userPermissionService.findAll();
	}

	@RequestMapping( value="/userPermission/{userPermissionId}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public UserPermission findOne(@PathVariable("userPermissionId") Integer userPermissionId) {
		return userPermissionService.findById(userPermissionId);
	}
	
	@RequestMapping( value="/userPermission",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public UserPermission create(@RequestBody UserPermission userPermission) {
		return userPermissionService.create(userPermission);
	}

	@RequestMapping( value="/userPermission/{userPermissionId}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public UserPermission update(@PathVariable("userPermissionId") Integer userPermissionId, @RequestBody UserPermission userPermission) {
		return userPermissionService.update(userPermission);
	}

	@RequestMapping( value="/userPermission/{userPermissionId}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("userPermissionId") Integer userPermissionId) {
		userPermissionService.delete(userPermissionId);
	}
	
}
