/*
 * Created on 27 ¡.¾. 2558 ( Time 16:44:32 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.nichesoft.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.nichesoft.bean.Messages;
import com.nichesoft.business.service.MessagesService;
import com.nichesoft.web.listitem.MessagesListItem;

/**
 * Spring MVC controller for 'Messages' management.
 */
@Controller
public class MessagesRestController {

	@Resource
	private MessagesService messagesService;
	
	@RequestMapping( value="/items/messages",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<MessagesListItem> findAllAsListItems() {
		List<Messages> list = messagesService.findAll();
		List<MessagesListItem> items = new LinkedList<MessagesListItem>();
		for ( Messages messages : list ) {
			items.add(new MessagesListItem( messages ) );
		}
		return items;
	}
	
	@RequestMapping( value="/messages",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<Messages> findAll() {
		return messagesService.findAll();
	}

	@RequestMapping( value="/messages/{messageId}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Messages findOne(@PathVariable("messageId") Integer messageId) {
		return messagesService.findById(messageId);
	}
	
	@RequestMapping( value="/messages",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Messages create(@RequestBody Messages messages) {
		return messagesService.create(messages);
	}

	@RequestMapping( value="/messages/{messageId}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public Messages update(@PathVariable("messageId") Integer messageId, @RequestBody Messages messages) {
		return messagesService.update(messages);
	}

	@RequestMapping( value="/messages/{messageId}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("messageId") Integer messageId) {
		messagesService.delete(messageId);
	}
	
}
