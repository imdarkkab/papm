/*
 * Created on 27 ¡.¾. 2558 ( Time 16:44:33 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.nichesoft.rest.controller;

import java.util.LinkedList;
import java.util.List;

import javax.annotation.Resource;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.ResponseStatus;
import com.nichesoft.bean.ProjectUser;
import com.nichesoft.business.service.ProjectUserService;
import com.nichesoft.web.listitem.ProjectUserListItem;

/**
 * Spring MVC controller for 'ProjectUser' management.
 */
@Controller
public class ProjectUserRestController {

	@Resource
	private ProjectUserService projectUserService;
	
	@RequestMapping( value="/items/projectUser",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<ProjectUserListItem> findAllAsListItems() {
		List<ProjectUser> list = projectUserService.findAll();
		List<ProjectUserListItem> items = new LinkedList<ProjectUserListItem>();
		for ( ProjectUser projectUser : list ) {
			items.add(new ProjectUserListItem( projectUser ) );
		}
		return items;
	}
	
	@RequestMapping( value="/projectUser",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public List<ProjectUser> findAll() {
		return projectUserService.findAll();
	}

	@RequestMapping( value="/projectUser/{projectUserId}",
			method = RequestMethod.GET,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public ProjectUser findOne(@PathVariable("projectUserId") Integer projectUserId) {
		return projectUserService.findById(projectUserId);
	}
	
	@RequestMapping( value="/projectUser",
			method = RequestMethod.POST,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public ProjectUser create(@RequestBody ProjectUser projectUser) {
		return projectUserService.create(projectUser);
	}

	@RequestMapping( value="/projectUser/{projectUserId}",
			method = RequestMethod.PUT,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public ProjectUser update(@PathVariable("projectUserId") Integer projectUserId, @RequestBody ProjectUser projectUser) {
		return projectUserService.update(projectUser);
	}

	@RequestMapping( value="/projectUser/{projectUserId}",
			method = RequestMethod.DELETE,
			produces = MediaType.APPLICATION_JSON_VALUE)
    @ResponseStatus(HttpStatus.OK)
	@ResponseBody
	public void delete(@PathVariable("projectUserId") Integer projectUserId) {
		projectUserService.delete(projectUserId);
	}
	
}
