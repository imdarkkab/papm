/*
 * Created on 27 ¡.¾. 2558 ( Time 16:44:19 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.nichesoft.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.nichesoft.bean.Permission;
import com.nichesoft.bean.jpa.PermissionEntity;
import com.nichesoft.bean.jpa.MenuSubEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class PermissionServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public PermissionServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'PermissionEntity' to 'Permission'
	 * @param permissionEntity
	 */
	public Permission mapPermissionEntityToPermission(PermissionEntity permissionEntity) {
		if(permissionEntity == null) {
			return null;
		}

		//--- Generic mapping 
		Permission permission = map(permissionEntity, Permission.class);

		//--- Link mapping ( link to MenuSub )
		if(permissionEntity.getMenuSub() != null) {
			permission.setMenuId(permissionEntity.getMenuSub().getMenuSubIs());
		}
		return permission;
	}
	
	/**
	 * Mapping from 'Permission' to 'PermissionEntity'
	 * @param permission
	 * @param permissionEntity
	 */
	public void mapPermissionToPermissionEntity(Permission permission, PermissionEntity permissionEntity) {
		if(permission == null) {
			return;
		}

		//--- Generic mapping 
		map(permission, permissionEntity);

		//--- Link mapping ( link : permission )
		if( hasLinkToMenuSub(permission) ) {
			MenuSubEntity menuSub1 = new MenuSubEntity();
			menuSub1.setMenuSubIs( permission.getMenuId() );
			permissionEntity.setMenuSub( menuSub1 );
		} else {
			permissionEntity.setMenuSub( null );
		}

	}
	
	/**
	 * Verify that MenuSub id is valid.
	 * @param MenuSub MenuSub
	 * @return boolean
	 */
	private boolean hasLinkToMenuSub(Permission permission) {
		if(permission.getMenuId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}