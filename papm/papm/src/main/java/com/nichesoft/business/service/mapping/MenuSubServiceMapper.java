/*
 * Created on 27 ¡.¾. 2558 ( Time 16:44:19 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.nichesoft.business.service.mapping;

import org.modelmapper.ModelMapper;
import org.modelmapper.convention.MatchingStrategies;
import org.springframework.stereotype.Component;
import com.nichesoft.bean.MenuSub;
import com.nichesoft.bean.jpa.MenuSubEntity;
import com.nichesoft.bean.jpa.MessagesEntity;

/**
 * Mapping between entity beans and display beans.
 */
@Component
public class MenuSubServiceMapper extends AbstractServiceMapper {

	/**
	 * ModelMapper : bean to bean mapping library.
	 */
	private ModelMapper modelMapper;
	
	/**
	 * Constructor.
	 */
	public MenuSubServiceMapper() {
		modelMapper = new ModelMapper();
		modelMapper.getConfiguration().setMatchingStrategy(MatchingStrategies.STRICT);
	}

	/**
	 * Mapping from 'MenuSubEntity' to 'MenuSub'
	 * @param menuSubEntity
	 */
	public MenuSub mapMenuSubEntityToMenuSub(MenuSubEntity menuSubEntity) {
		if(menuSubEntity == null) {
			return null;
		}

		//--- Generic mapping 
		MenuSub menuSub = map(menuSubEntity, MenuSub.class);

		//--- Link mapping ( link to Messages )
		if(menuSubEntity.getMessages() != null) {
			menuSub.setMessageId(menuSubEntity.getMessages().getMessageId());
		}
		return menuSub;
	}
	
	/**
	 * Mapping from 'MenuSub' to 'MenuSubEntity'
	 * @param menuSub
	 * @param menuSubEntity
	 */
	public void mapMenuSubToMenuSubEntity(MenuSub menuSub, MenuSubEntity menuSubEntity) {
		if(menuSub == null) {
			return;
		}

		//--- Generic mapping 
		map(menuSub, menuSubEntity);

		//--- Link mapping ( link : menuSub )
		if( hasLinkToMessages(menuSub) ) {
			MessagesEntity messages1 = new MessagesEntity();
			messages1.setMessageId( menuSub.getMessageId() );
			menuSubEntity.setMessages( messages1 );
		} else {
			menuSubEntity.setMessages( null );
		}

	}
	
	/**
	 * Verify that Messages id is valid.
	 * @param Messages Messages
	 * @return boolean
	 */
	private boolean hasLinkToMessages(MenuSub menuSub) {
		if(menuSub.getMessageId() != null) {
			return true;
		}
		return false;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected ModelMapper getModelMapper() {
		return modelMapper;
	}

	protected void setModelMapper(ModelMapper modelMapper) {
		this.modelMapper = modelMapper;
	}

}