/*
 * Created on 27 ¡.¾. 2558 ( Time 16:44:19 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */
package com.nichesoft.business.service.impl;

import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;

import com.nichesoft.bean.Project;
import com.nichesoft.bean.jpa.ProjectEntity;
import java.util.Date;
import java.util.List;
import com.nichesoft.business.service.ProjectService;
import com.nichesoft.business.service.mapping.ProjectServiceMapper;
import com.nichesoft.data.repository.jpa.ProjectJpaRepository;
import org.springframework.stereotype.Component;
import org.springframework.transaction.annotation.Transactional;

/**
 * Implementation of ProjectService
 */
@Component
@Transactional
public class ProjectServiceImpl implements ProjectService {

	@Resource
	private ProjectJpaRepository projectJpaRepository;

	@Resource
	private ProjectServiceMapper projectServiceMapper;
	
	@Override
	public Project findById(Integer projectId) {
		ProjectEntity projectEntity = projectJpaRepository.findOne(projectId);
		return projectServiceMapper.mapProjectEntityToProject(projectEntity);
	}

	@Override
	public List<Project> findAll() {
		Iterable<ProjectEntity> entities = projectJpaRepository.findAll();
		List<Project> beans = new ArrayList<Project>();
		for(ProjectEntity projectEntity : entities) {
			beans.add(projectServiceMapper.mapProjectEntityToProject(projectEntity));
		}
		return beans;
	}

	@Override
	public Project save(Project project) {
		return update(project) ;
	}

	@Override
	public Project create(Project project) {
		ProjectEntity projectEntity = projectJpaRepository.findOne(project.getProjectId());
		if( projectEntity != null ) {
			throw new IllegalStateException("already.exists");
		}
		projectEntity = new ProjectEntity();
		projectServiceMapper.mapProjectToProjectEntity(project, projectEntity);
		ProjectEntity projectEntitySaved = projectJpaRepository.save(projectEntity);
		return projectServiceMapper.mapProjectEntityToProject(projectEntitySaved);
	}

	@Override
	public Project update(Project project) {
		ProjectEntity projectEntity = projectJpaRepository.findOne(project.getProjectId());
		projectServiceMapper.mapProjectToProjectEntity(project, projectEntity);
		ProjectEntity projectEntitySaved = projectJpaRepository.save(projectEntity);
		return projectServiceMapper.mapProjectEntityToProject(projectEntitySaved);
	}

	@Override
	public void delete(Integer projectId) {
		projectJpaRepository.delete(projectId);
	}

	public ProjectJpaRepository getProjectJpaRepository() {
		return projectJpaRepository;
	}

	public void setProjectJpaRepository(ProjectJpaRepository projectJpaRepository) {
		this.projectJpaRepository = projectJpaRepository;
	}

	public ProjectServiceMapper getProjectServiceMapper() {
		return projectServiceMapper;
	}

	public void setProjectServiceMapper(ProjectServiceMapper projectServiceMapper) {
		this.projectServiceMapper = projectServiceMapper;
	}

}
